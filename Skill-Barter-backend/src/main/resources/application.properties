#spring.application.name=Skill-Barter
#spring.jpa.show-sql=true
##
#spring.datasource.url = jdbc:mysql://localhost:3306/skill-barter
#spring.datasource.username=root
#spring.datasource.password=yash1234
#spring.jpa.hibernate.ddl-auto=update
#
#
#file.upload-dir=uploads/profile-pictures
#springdoc.swagger-ui.path=/swagger-ui
#springdoc.api-docs.path=/api-docs

#
#spring.datasource.url = jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:skill-barter}
#spring.datasource.username=root
#spring.datasource.password=DB_PASSWORD
#MYSQL_DATABASE="railway"
#MYSQL_PUBLIC_URL="mysql://${{MYSQLUSER}}:${{MYSQL_ROOT_PASSWORD}}@${{RAILWAY_TCP_PROXY_DOMAIN}}:${{RAILWAY_TCP_PROXY_PORT}}/${{MYSQL_DATABASE}}"
#MYSQL_ROOT_PASSWORD="FdPZkKnWSuNBkhpCJIziBJHiINdiCbKw"
#MYSQL_URL="mysql://${{MYSQLUSER}}:${{MYSQL_ROOT_PASSWORD}}@${{RAILWAY_PRIVATE_DOMAIN}}:3306/${{MYSQL_DATABASE}}"
#MYSQLDATABASE="${{MYSQL_DATABASE}}"
#MYSQLHOST="${{RAILWAY_PRIVATE_DOMAIN}}"
#MYSQLPASSWORD="${{MYSQL_ROOT_PASSWORD}}"
#MYSQLPORT="3306"
#MYSQLUSER="root"
#
#spring.jpa.hibernate.ddl-auto=update
#
## Database configuration using Railway env variables
#spring.datasource.url=$[MYSQL_PUBLIC_URL}
#spring.datasource.username=${DB_USERNAME:root}
#spring.datasource.password=${DB_PASSWORD}
#
## Explicitly set Hibernate dialect for MySQL
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#
## File upload directory
#file.upload-dir=uploads/profile-pictures

spring.application.name=Skill-Barter
spring.jpa.show-sql=true

# Database configuration for Render PostgreSQL (External URL with credentials)
spring.datasource.url=jdbc:postgresql://dpg-cve56vt6l47c73ab8620-a.oregon-postgres.render.com:5432/skillbarter?user=yash&password=D3u6YGlRfmuoTPupwxTfVQfrwpG88jes&sslmode=require
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# File upload directory
file.upload-dir=uploads/profile-pictures

# Swagger configuration
springdoc.swagger-ui.path=/swagger-ui
springdoc.api-docs.path=/api-docs
server.port=${PORT:8080}
server.address=0.0.0.0

spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.initialization-fail-timeout=0